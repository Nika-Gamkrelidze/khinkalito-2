// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id           String   @id @default(uuid())
  username     String   @unique
  passwordHash String
  role         String
  createdAt    DateTime @default(now())
}

model Product {
  id          String        @id @default(uuid())
  name        Json
  description Json
  image       String?
  active      Boolean       @default(true)
  createdAt   DateTime      @default(now())
  sizes       ProductSize[]
}

model ProductSize {
  id        Int     @id @default(autoincrement())
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  sizeKg    Float
  price     Int

  @@unique([productId, sizeKg])
}

model Setting {
  key   String @id
  value Json
}

model Order {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  status    String
  customer  Json
  address   Json
  items     Json
  total     Int
  payments  Payment[]
}

model Payment {
  id                 String   @id @default(uuid())
  orderId            String
  order              Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  
  // Payment gateway info
  gateway            String   // "ipay", "bog", etc.
  gatewayOrderId     String?  // BOG's internal order ID
  gatewayTransactionId String? // Transaction ID from gateway
  
  // Payment details
  amount             Int      // Amount in minor units (cents)
  currency           String   @default("GEL")
  status             String   // "pending", "completed", "failed", "refunded"
  paymentMethod      String?  // "card", "direct_debit", etc.
  
  // Card/payer info (if available)
  payerIdentifier    String?  // Masked card number or identifier
  cardType           String?
  
  // Timestamps
  createdAt          DateTime @default(now())
  completedAt        DateTime?
  
  // Gateway request/response
  gatewayRequest     Json?    // Original request sent to gateway
  gatewayResponse    Json?    // Response from gateway
  
  // Webhook data
  webhookReceivedAt  DateTime?
  webhookPayload     Json?
  
  // Sync tracking
  lastSyncAt         DateTime?
  
  // Additional metadata
  metadata           Json?    // Any extra data
  
  @@index([orderId])
  @@index([status])
  @@index([gateway])
  @@index([createdAt])
}

/// Stores uploaded images as binary with metadata
model Image {
  id         String   @id @default(uuid())
  filename   String
  mimeType   String
  size       Int
  data       Bytes
  createdAt  DateTime @default(now())
}
